x<-expression(beta)
paste(x,1,0.1,10,seq="")
expression(lambda)
expression(paste("This is the greek symbol such as", alpha, beta, sep="  "))
expression(lambda)expression(paste("This is the greek symbol such as", alpha, beta, sep="  "))
expression(lambda)
expression(paste("This is the greek symbol such as", alpha, beta, sep="  "))
expression(lambda)
expression(paste("This is the greek symbol such as", alpha, beta, sep="  "))
demo(plotmath)
?expression
expression(lambda)
expression(paste("This is the greek symbol such as", alpha, beta, sep="  "))
x<-expression(\beta)
x<-expression("beta")
.expressions <- paste(colnames(data),greek,sep="")
legend_expressions <-parse(text = .expressions)
greek<-c(" (alpha)"," (beta)"," (gamma)"," (delta)")
.expressions <- paste(colnames(data),greek,sep="")
legend_expressions <-parse(text = .expressions)
greek<-c(" (alpha)"," (beta)"," (gamma)"," (delta)")
.expressions <- paste(colnames(data),greek,sep="")
.expressions
legend_expressions <-parse(text = .expressions)
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ytab="Distribution function",main="Figure1.Exponential pdf")
lines(x,y2,col="red")
lines(x,y3,col="orange")
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ylab="Distribution function",main="Figure1.Exponential pdf")
lines(x,y2,col="red")
lines(x,y3,col="orange")
legend=(3,0.5,legend=c(""))
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ylab="Distribution function",main="Figure1.Exponential pdf")
lines(x,y2,col="red")
lines(x,y3,col="orange")
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ylab="Distribution function",main="Figure1.Exponential pdf")
lines(x,y2,col="red")
lines(x,y3,col="orange")
legend=(3,0.5,legend=c("beta=1.0","beta=0.1","beta=10"),col=c("blue","red","orange"))
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ylab="Distribution function",main="Figure1.Exponential pdf")
lines(x,y2,col="red")
lines(x,y3,col="orange")
legend=(3,0.5,legend=c("beta=1.0","beta=0.1","beta=10"),col=c("blue","red","orange"),lty=1)
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ylab="Distribution function",main="Figure1.Exponential pdf")
lines(x,y2,col="red")
lines(x,y3,col="orange")
legend=(3,0.5,legend=c("beta=1.0","beta=0.1","beta=10"),col=c("blue","red","orange"),lty=1)
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ylab="Distribution function",main="Figure1.Exponential pdf")
lines(x,y2,col="red")
lines(x,y3,col="orange")
legend=(3,0.5,legend=c("beta=1.0","beta=0.1","beta=10"),col=c("blue","red","orange"),lty=1)
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ylab="Distribution function",main="Figure1.Exponential pdf")
lines(x,y2,col="red")
lines(x,y3,col="orange")
legend=(3,0.5,legend=c("beta=1.0","beta=0.1","beta=10"),col=c("blue","red","orange"),lty=1)
legend(3.3,0.4,legend=c("x(0)=1,alpha=0.1","x(0)=2,alpha=1","x(0)=5,alpha=10"),col=c("blue","green","red"),lty=1,cex=0.6,bty="n")
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ylab="Distribution function",main="Figure1.Exponential pdf")
lines(x,y2,col="red")
lines(x,y3,col="orange")
legend(3,0.6,legend=c("beta=1.0","beta=0.1","beta=10"),col=c("blue","red","orange"),lty=1)
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ylab="Distribution function",main="Figure1.Exponential pdf")
lines(x,y2,col="red")
lines(x,y3,col="orange")
legend(3,0.6,legend=c("beta=1.0","beta=0.1","beta=10"),col=c("blue","red","orange"),lty=1,cex=0.6,bty="n")
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ylab="Distribution function",main="Figure1.Exponential pdf")
lines(x,y2,col="red")
lines(x,y3,col="orange")
legend(3,0.8,legend=c("beta=1.0","beta=0.1","beta=10"),col=c("blue","red","orange"),lty=1,cex=0.6,bty="n")
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ylab="Distribution function",main="Figure1.Exponential pdf",cex.main=0.8,cex.lab=0.4)
lines(x,y2,col="red")
lines(x,y3,col="orange")
legend(3,0.8,legend=c("beta=1.0","beta=0.1","beta=10"),col=c("blue","red","orange"),lty=1,cex=0.6,bty="n")
x<-seq(0,5,length=10000)
y1<-dpareto(x,location=1,shape=0.1)
y2<-dpareto(x,location=2,shape=1)
y3<-dpareto(x,location=5,shape=10)
plot(x,y1,type="l",col="blue",ylim=c(0,0.5),xlim=c(1,5),ylab="probability",main="figure1.density of pareto distribution",cex.main=0.8,cex.axis=0.6)
lines(x,y2,col="green")
lines(x,y3,col="red")
legend(3.3,0.4,legend=c("x(0)=1,alpha=0.1","x(0)=2,alpha=1","x(0)=5,alpha=10"),col=c("blue","green","red"),lty=1,cex=0.6,bty="n")
x<-seq(0,5,length=10000)
y1<-dpareto(x,location=1,shape=0.1)
y2<-dpareto(x,location=2,shape=1)
y3<-dpareto(x,location=5,shape=10)
plot(x,y1,type="l",col="blue",ylim=c(0,0.5),xlim=c(1,5),ylab="probability",main="figure1.density of pareto distribution",cex.main=0.8,cex.axis=0.5)
lines(x,y2,col="green")
lines(x,y3,col="red")
legend(3.3,0.4,legend=c("x(0)=1,alpha=0.1","x(0)=2,alpha=1","x(0)=5,alpha=10"),col=c("blue","green","red"),lty=1,cex=0.6,bty="n")
legend(3.3,0.4,legend=c("x(0)=1,alpha=0.1","x(0)=2,alpha=1","x(0)=5,alpha=10"),col=c("blue","green","red"),lty=1,cex=0.6,bty="n")
library("knitr", lib.loc="/Users/Yuan/Library/R/3.0/library")
x<-seq(0,5,length=10000)
y1<-dpareto(x,location=1,shape=0.1)
y2<-dpareto(x,location=2,shape=1)
y3<-dpareto(x,location=5,shape=10)
plot(x,y1,type="l",col="blue",ylim=c(0,0.5),xlim=c(1,5),ylab="probability",main="figure1.density of pareto distribution",cex.main=0.8,cex.axis=0.5)
lines(x,y2,col="green")
lines(x,y3,col="red")
legend(3.3,0.4,legend=c("x(0)=1,alpha=0.1","x(0)=2,alpha=1","x(0)=5,alpha=10"),col=c("blue","green","red"),lty=1,cex=0.6,bty="n")
library("VGAM")
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ylab="Distribution function",main="Figure1.Exponential pdf",cex.main=1.5,cex.axis=1.0,cex.lab=1.2)
lines(x,y2,col="red")
lines(x,y3,col="orange")
legend(3,0.8,legend=c("beta=1.0","beta=0.1","beta=10"),col=c("blue","red","orange"),lty=1,cex=1,bty="n")
@
x<-seq(0,5,length=100000)
y1<-pexp(x)
y2<-pexp(x,rate=10)
y3<-pexp(x,rate=0.1)
plot(x,y1,type="l",col="blue",ylab="Distribution function",main="Figure1.Exponential pdf",cex.main=1.5,cex.axis=1.0,cex.lab=1.2)
lines(x,y2,col="red")
lines(x,y3,col="orange")
legend(3,0.8,legend=c("beta=1.0","beta=0.1","beta=10"),col=c("blue","red","orange"),lty=1,cex=1,bty="n")
install.packages("VGAM")
packages()
package()
library()
?dataframe
?frame
?data.frame
numbers<-seq(1,10,length=10)
words<-c("One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten")
nw<-dataframe(numbers,words)
numbers<-seq(1,10,length=10)
words<-c("One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten")
nw<-data.frame(numbers,words)
numbers<-seq(1,10,length=10)
words<-c("One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten")
nw<-data.frame(numbers,words)
nw
describe(nw)
des("nw")
?descrive
?describe
??describe
library()
summary(nw)
numbers<-seq(1,10,length=10)
words<-c("One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten")
nw<-data.frame(numbers,words)
nw
summary(nw)
nw[numbers[8]]
numbers<-seq(1,10,length=10)
words<-c("One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten")
nw<-data.frame(numbers,words)
nw
summary(nw)
nw[8,1]
numbers<-seq(1,10,length=10)
words<-c("One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten")
nw<-data.frame(numbers,words)
nw
summary(nw)
nw[8,1]
nw[8,2]
numbers<-seq(1,10,length=10)
words<-c("One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten")
nw<-data.frame(numbers,words)
nw
summary(nw)
nw[8,1]
nw[8,2]
data.frame(nw$words[8])
x=1:10
x
x<-1:10
a<-matrix(x,ncol=5,nrow=2,byrow=TRUE)
a
x<-1:6
y<-5:10
a<-rbind(x,y)
a
x<-1:6
y<-5:10
a<-rbind(x,y)
a
str(a)
x<-1:6
y<-5:10
a<-matrix(rbind(x,y))
a
str(a)
x<-1:6
y<-5:10
a<-rbind(x,y)
b<-matrix(a)
a
b
str(a)
str(b)
x<-1:6
y<-5:10
a<-rbind(x,y)
dim(a)=c(2,6)
a
x<-1:6
y<-5:10
a<-rbind(x,y)
dim(a)=c(2,6)
a
attributes(a)
k<-2:5
2*(1-pnorm(k))
sdt=sqrt(3)
2*(1-pt(k*sdt))
sh=2
sc=2
m=sh*sc
sdg=sqrt(sh*sc^2)
1-pgamma(m+k*sdg)+pgamma(m-k*sdg)
k<-2:5
2*(1-pnorm(k))
sdt=sqrt(3)
2*(1-pt(k*sdt,df=3))
sh=2
sc=2
m=sh*sc
sdg=sqrt(sh*sc^2)
1-pgamma(m+k*sdg,shape=sh,scale=sc)+pgamma(m-k*sdg,shape=sh,scale=sc)
X1<-rnorm(10000)
X2<-rnorm(10000,mean=2,sd=3)
U<-rbinom(10000,1,0.7)
X<-U*X1+(1-U)*X2
x<-seq(-6,10,length=201)
dx<-dbinom(x)+dbinom(x,mead=2,sd=3)
hist(X,probability=TRUE)
lines(x,dx,type="l")
?dbinom
X1<-rnorm(10000)
X2<-rnorm(10000,mean=2,sd=3)
U<-rbinom(10000,1,0.7)
X<-U*X1+(1-U)*X2
x<-seq(-6,10,length=201)
dx<-dnorm(x)+dnorm(x,mead=2,sd=3)
hist(X,probability=TRUE)
lines(x,dx,type="l")
X1<-rnorm(10000)
X2<-rnorm(10000,mean=2,sd=3)
U<-rbinom(10000,1,0.7)
X<-U*X1+(1-U)*X2
x<-seq(-6,10,length=201)
dx<-dnorm(x)+dnorm(x,mean=2,sd=3)
hist(X,probability=TRUE)
lines(x,dx,type="l")
par(mfrow=c(1,2))
X1<-rnorm(10000)
X2<-rnorm(10000,mean=2,sd=3)
U<-rbinom(10000,1,0.7)
X<-U*X1+(1-U)*X2
x<-seq(-6,10,length=201)
dx<-dnorm(x)+dnorm(x,mean=2,sd=3)
hist(X,probability=TRUE,breaks=30)
lines(x,dx,type="l")
par(mfrow=c(1,2))
X1<-rnorm(10000)
X2<-rnorm(10000,mean=2,sd=3)
U<-rbinom(10000,1,0.7)
X<-U*X1+(1-U)*X2
x<-seq(-6,10,length=201)
dx<-dnorm(x)+dnorm(x,mean=2,sd=3)
hist(X,probability=TRUE)
lines(x,dx,type="l")
par(mfrow=c(1,2))
X1<-rnorm(10000)
X2<-rnorm(10000,mean=5,sd=3)
U<-rbinom(10000,1,0.7)
X<-U*X1+(1-U)*X2
x<-seq(-6,10,length=201)
dx<-dnorm(x)+dnorm(x,mean=5,sd=3)
hist(X,probability=TRUE)
lines(x,dx,type="l")
par(mfrow=c(1,2))
X1<-rnorm(10000)
X2<-rnorm(10000,mean=5,sd=3)
U<-rbinom(10000,1,0.7)
X<-U*X1+(1-U)*X2
x<-seq(-6,10,length=201)
dx<-dnorm(x)+dnorm(x,mean=5,sd=3)
hist(X,probability=TRUE,xlim=c(-2,10))
lines(x,dx,type="l")
par(mfrow=c(1,2))
X1<-rnorm(10000)
X2<-rnorm(10000,mean=5,sd=3)
U<-rbinom(10000,1,0.7)
X<-U*X1+(1-U)*X2
x<-seq(-6,10,length=201)
dx<-0.7*dnorm(x)+0.3*dnorm(x,mean=5,sd=3)
hist(X,probability=TRUE,xlim=c(-2,10))
lines(x,dx,type="l")
par(mfrow=c(1,2))
X1<-rnorm(10000)
X2<-rnorm(10000,mean=5,sd=3)
U<-rbinom(10000,1,0.7)
X<-U*X1+(1-U)*X2
x<-seq(-6,10,length=201)
dx<-0.7*dnorm(x)+0.3*dnorm(x,mean=5,sd=3)
hist(X,probability=TRUE,xlim=c(-2,10),ylim=c(0,0.5))
lines(x,dx,type="l")
par(mfrow=c(1,2))
X1<-rnorm(10000)
X2<-rnorm(10000,mean=5,sd=3)
U<-rbinom(10000,1,0.7)
X<-U*X1+(1-U)*X2
x<-seq(-6,10,length=201)
dx<-0.7*dnorm(x)+0.3*dnorm(x,mean=5,sd=3)
hist(X,probability=TRUE,xlim=c(-2,10),ylim=c(0,0.3))
lines(x,dx,type="l")
library(mvtnorm)
library(RSVGTipsDevice)
MyPlot <- function(xy, xlim = c(-4, 4), ylim = c(-4, 4), eps = 1e-15) {
title = round(cor(xy[,1], xy[,2]), 1)
if (sd(xy[,2]) < eps) title = "" # corr. coeff. is undefined
plot(xy, main = title, xlab = "", ylab = "",
col = "darkblue", pch = 16, cex = 0.2,
xaxt = "n", yaxt = "n", bty = "n",
xlim = xlim, ylim = ylim)
}
MvNormal <- function(n = 1000, cor = 0.8) {
for (i in cor) {
sd = matrix(c(1, i, i, 1), ncol = 2)
x = rmvnorm(n, c(0, 0), sd)
MyPlot(x)
}
}
rotation <- function(t, X) return(X %*% matrix(c(cos(t), sin(t), -sin(t), cos(t)), ncol = 2))
RotNormal <- function(n = 1000, t = pi/2) {
sd = matrix(c(1, 1, 1, 1), ncol = 2)
x = rmvnorm(n, c(0, 0), sd)
for (i in t)
MyPlot(rotation(i, x))
}
Others <- function(n = 1000) {
x = runif(n, -1, 1)
y = 4 * (x^2 - 1/2)^2 + runif(n, -1, 1)/3
MyPlot(cbind(x,y), xlim = c(-1, 1), ylim = c(-1/3, 1+1/3))
y = runif(n, -1, 1)
xy = rotation(-pi/8, cbind(x,y))
lim = sqrt(2+sqrt(2)) / sqrt(2)
MyPlot(xy, xlim = c(-lim, lim), ylim = c(-lim, lim))
xy = rotation(-pi/8, xy)
MyPlot(xy, xlim = c(-sqrt(2), sqrt(2)), ylim = c(-sqrt(2), sqrt(2)))
y = 2*x^2 + runif(n, -1, 1)
MyPlot(cbind(x,y), xlim = c(-1, 1), ylim = c(-1, 3))
y = (x^2 + runif(n, 0, 1/2)) * sample(seq(-1, 1, 2), n, replace = TRUE)
MyPlot(cbind(x,y), xlim = c(-1.5, 1.5), ylim = c(-1.5, 1.5))
y = cos(x*pi) + rnorm(n, 0, 1/8)
x = sin(x*pi) + rnorm(n, 0, 1/8)
MyPlot(cbind(x,y), xlim = c(-1.5, 1.5), ylim = c(-1.5, 1.5))
xy1 = rmvnorm(n/4, c( 3,  3))
xy2 = rmvnorm(n/4, c(-3,  3))
xy3 = rmvnorm(n/4, c(-3, -3))
xy4 = rmvnorm(n/4, c( 3, -3))
MyPlot(rbind(xy1, xy2, xy3, xy4), xlim = c(-3-4, 3+4), ylim = c(-3-4, 3+4))
}
output <- function() {
devSVGTips(width = 7, height = 3.2) # remove first and last line for no svg exporting
par(mfrow = c(3, 7), oma = c(0,0,0,0), mar=c(2,2,2,0))
MvNormal(800, c(1.0, 0.8, 0.4, 0.0, -0.4, -0.8, -1.0));
RotNormal(200, c(0, pi/12, pi/6, pi/4, pi/2-pi/6, pi/2-pi/12, pi/2));
Others(800)
dev.off() # remove first and last line for no svg exporting
}
install.packages("mvtnorm")
install.packages("RSVGTipsDevice")
library(mvtnorm)
library(RSVGTipsDevice)
MyPlot <- function(xy, xlim = c(-4, 4), ylim = c(-4, 4), eps = 1e-15) {
title = round(cor(xy[,1], xy[,2]), 1)
if (sd(xy[,2]) < eps) title = "" # corr. coeff. is undefined
plot(xy, main = title, xlab = "", ylab = "",
col = "darkblue", pch = 16, cex = 0.2,
xaxt = "n", yaxt = "n", bty = "n",
xlim = xlim, ylim = ylim)
}
MvNormal <- function(n = 1000, cor = 0.8) {
for (i in cor) {
sd = matrix(c(1, i, i, 1), ncol = 2)
x = rmvnorm(n, c(0, 0), sd)
MyPlot(x)
}
}
rotation <- function(t, X) return(X %*% matrix(c(cos(t), sin(t), -sin(t), cos(t)), ncol = 2))
RotNormal <- function(n = 1000, t = pi/2) {
sd = matrix(c(1, 1, 1, 1), ncol = 2)
x = rmvnorm(n, c(0, 0), sd)
for (i in t)
MyPlot(rotation(i, x))
}
Others <- function(n = 1000) {
x = runif(n, -1, 1)
y = 4 * (x^2 - 1/2)^2 + runif(n, -1, 1)/3
MyPlot(cbind(x,y), xlim = c(-1, 1), ylim = c(-1/3, 1+1/3))
y = runif(n, -1, 1)
xy = rotation(-pi/8, cbind(x,y))
lim = sqrt(2+sqrt(2)) / sqrt(2)
MyPlot(xy, xlim = c(-lim, lim), ylim = c(-lim, lim))
xy = rotation(-pi/8, xy)
MyPlot(xy, xlim = c(-sqrt(2), sqrt(2)), ylim = c(-sqrt(2), sqrt(2)))
y = 2*x^2 + runif(n, -1, 1)
MyPlot(cbind(x,y), xlim = c(-1, 1), ylim = c(-1, 3))
y = (x^2 + runif(n, 0, 1/2)) * sample(seq(-1, 1, 2), n, replace = TRUE)
MyPlot(cbind(x,y), xlim = c(-1.5, 1.5), ylim = c(-1.5, 1.5))
y = cos(x*pi) + rnorm(n, 0, 1/8)
x = sin(x*pi) + rnorm(n, 0, 1/8)
MyPlot(cbind(x,y), xlim = c(-1.5, 1.5), ylim = c(-1.5, 1.5))
xy1 = rmvnorm(n/4, c( 3,  3))
xy2 = rmvnorm(n/4, c(-3,  3))
xy3 = rmvnorm(n/4, c(-3, -3))
xy4 = rmvnorm(n/4, c( 3, -3))
MyPlot(rbind(xy1, xy2, xy3, xy4), xlim = c(-3-4, 3+4), ylim = c(-3-4, 3+4))
}
output <- function() {
devSVGTips(width = 7, height = 3.2) # remove first and last line for no svg exporting
par(mfrow = c(3, 7), oma = c(0,0,0,0), mar=c(2,2,2,0))
MvNormal(800, c(1.0, 0.8, 0.4, 0.0, -0.4, -0.8, -1.0));
RotNormal(200, c(0, pi/12, pi/6, pi/4, pi/2-pi/6, pi/2-pi/12, pi/2));
Others(800)
dev.off() # remove first and last line for no svg exporting
}
output
output()
x<-1:4
y<2
x<-list(2,"a","b",TRUE)
x[[1]]
x[1]
x<-list(foo=1:4,bar=0.6)
x[1]
x[[1]]
x
x$bar
x[["bar"]]
x["bar"]
x<list(foo=1:4,bar=0.6,baz="hello")
x<_list(foo=1:4,bar=0.6,baz="hello")
x<-list(foo=1:4,bar=0.6,baz="hello")
x[c(1,3)]
name<-"foo"
x[name]
x[[name]]
x$name
x$foo
x[[c(1,3)]]
x[c(1,3)]
x<-list(a=list(19,23,4),b=c(12,32,4))
x[c(1,3)]
x[c(1,2)]
x[[c[1,3]]]
x[[c[1,3]]
\]
x[[c(1,3)]]
x[[1]][[3]]
x<-c(3,123,4,2,4,NA)
bad<-is.na(x)
x[!bad]
?complet.cases
?complete.cases
read.csv("hw1_data")
read.csv("hw1_data.csv")
dir()
getwd()
